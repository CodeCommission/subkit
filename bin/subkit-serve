#!/usr/bin/env node

const PORT = process.env.PORT
const NODE_ENV = process.env.NODE_ENV || 'development'
const program = require('commander')
const boxen = require('boxen')
const chalk = require('chalk')
const { write } = require('clipboardy')

require('babel-register')({
  presets: ['stage-0', 'es2015'],
})
require('whatwg-fetch')

program
  .option('-h, --host [ip]', 'Host to listen on.')
  .option('-p, --port [port]', 'Port to listen on.')
  .option('-s, --silent', 'Enable silent mode.')
  .action(() => serve({host: program.host, port: program.port, silent: program.silent}))
  .parse(process.argv)

if(!program.args.length) serve(program.opts())

function serve({port = PORT || null, host = '0.0.0.0', silent = false}) {
  require('../lib/server')
    .start({port, host})
    .then(({url}) => {
      if (!silent) {
        let message = `${chalk.green(`Listing (${NODE_ENV}) on:`)}\n\n`
        message += `${chalk.gray.bold(`${url}`)}\n\n`
        if (process.stdout.isTTY) {
          write(url)
          message += `${chalk.grey('Address copied to clipboard.')}`
        }
        console.log(boxen(message, {padding: 1, borderColor: 'gray', margin: 1}))
      }
    })
    .catch((err) => {
      console.error(chalk.red('An unexpected error occurred.'))
      console.error(err.stack)
      process.exit(1)
    })
}
